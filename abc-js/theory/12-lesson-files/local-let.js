// начинаем загрузку модуля
console.log('--- module load started');

// это глобальная функция
function letFunction() {
  console.log('--- run letFunction started');
  
  // это локальная функция доступная в пределах функции.
  // Время жизни - пока открыта вкладка.
  function fnFunction() {}

  // Это локальная переменная доступная для всех в пределах функции.
  // Время жизни - пока выполняется функция.
  let fnLocalLet = 'local function variable';
  if (true) {
    // Это локальная переменная доступная для всех в пределах данного блока if.
    // Время жизни - пока выполняется данный блок if.
    let ifLocalLet = 'if local variable';
    //Доступ в пределах области видимости не вызовет ошибок.
    console.log(`fnLocalLet value: "${fnLocalLet}"`);
    console.log(`ifLocalLet value: "${ifLocalLet}"`);
  }
  // Здесь нас ждет ошибка выполнения при каждом запуске функции,
  // так как переменная вне области видимости,
  // а также скорее всего уже уничтожена сборщиком мусора.
  console.log(ifLocalLet);

  // Сюда поток выполнения никогда не дойдет, потому что
  // предыдущая инструкция вызовет ошибку и поток выполнения прервется.
  console.log(fnLocalLet);
  console.log('--- run letFunction finished');
}

{
  // Это локальная переменная доступная для всех в пределах данного блока
  // Время жизни - пока выполняется данный блок.
  let blockLocalLet = 'block local variable';
  console.log(blockLocalLet);
}

// Здесь нас ждет ошибка выполнения при загрузке модуля,
// так как переменная вне области видимости,
// а также скорее всего уже уничтожена сборщиком мусора.
console.log(blockLocalLet);

// Сюда поток выполнения никогда не дойдет, потому что
// предыдущая инструкция вызовет ошибку и поток выполнения прервется.
console.log('--- module load finished');
